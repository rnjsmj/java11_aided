package org.kh.site2;
//대입연산 2
//비트 연산 : &(and), |(or), ~(complement), ^(xor), >>(right shiht), <<(left shift)
public class Operation7 {

	public static void main(String[] args) {
		int a = 20;
		int b = 15;
		int tmp;
		
		a +=b;
		b -=a;
		
		//a<->b
		tmp = a;
		a = b;
		b = tmp;
		System.out.println("a="+a+", b="+b);
		
		int x = 0b01101; // 13
		int y = 0b01011;
		
		//2진수 출력
		System.out.println("x="+Integer.toBinaryString(x));
		System.out.println("y="+Integer.toBinaryString(y));
		
		//비트 연산
		System.out.println("==========비트연산===========");
		System.out.println("x & y : "+Integer.toBinaryString(x & y)); //and
		System.out.println("x | y : "+Integer.toBinaryString(x | y)); //or
		//xor (1이 짝수개 => 0 / x, y만 비교할 때는 서로 같으면 0, 다르면 1) 
		System.out.println("x ^ y : "+Integer.toBinaryString(x ^ y )); 
		System.out.println("~x : "+Integer.toBinaryString(~x)); //not (4byte => 32자리)
		//right shift : n만큼 shift 할 경우 10진수 값을 2^n만큼 나눈 수 
		System.out.println("x >> 2 : "+Integer.toBinaryString(x>>2)+" => "+(x>>2));
		//left shift : n만큼 shift 할 경우 10진수 값을 2^n만큼 곱한 수 
		System.out.println("x << 2 : "+Integer.toBinaryString(x<<2)+" => "+(x<<2));
		
		//대입연산
		System.out.println("\n==========대입연산===========");
		//25 => 11001
		//30 => 11110
		int i = 25;
		int j = 30;
		i &= j;
		System.out.println("i &= j : "+i); //11000 => 24
		
		
		
		
	}

}
